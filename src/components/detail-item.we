<template>
  <container>
    <div class="day-box {{color}}" onclick="openOptions">
      <img src="/img/{{detail.category}}.svg" style="width:45;height:45;"></img>
      <div class="detail-box {{position}}">
        <text class="detail-text">{{category}}：{{amount}}元</text>
      </div>
      <div class="desc-box {{position}}">
        <text class="desc-text">{{detail.desc}}</text>
      </div>
      <div id="delete" class="delete-box" onclick="deleteItem">
        <img src="/img/delete.svg" style="width:25;height:25;"></img>
      </div>
      <div id="edit" class="edit-box" onclick="editItem">
        <img src="/img/edit.svg" style="width:25;height:25;"></img>
      </div>
    </div>
    <!-- <div if="optionsShow" id="shadow" class="shadow" onclick="closeOptions"></div> -->
  </container>
</template>

<style>
  .day-box {
    margin-top: 30;
    position: relative;
    width: 55;
    height: 55;
    border-radius: 55;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: #aaa;
  }
  .detail-box {
    position: absolute;
    top: 0;
    height: 55;
    width: 200;
    display: flex;
    justify-content: center;
  }
  .right {
    left: 65;
    /*text-align: left;*/
    align-items: flex-start;
  }
  .left {
    right: 65;
    /*text-align: right;*/
    align-items: flex-end;
  }
  .detail-text {
    font-size: 25;
  }
  .desc-box {
    position: absolute;
    width: 200;
    bottom: -15;
  }
  .right {
    left: 65;
    /*text-align: left;*/
    align-items: flex-start;
  }
  .left {
    right: 65;
    /*text-align: right;*/
    align-items: flex-end;
  }
  .desc-text {
    font-size: 20;
    color: #555;
  }
  .delete-box {
    width: 55;
    height: 55;
    position: absolute;
    top: 0;
    right: 0;
    border-radius: 55;
    justify-content: center;
    align-items: center;
    background-color: #aaa;
    opacity: 0;
    /*transform: scale(0.5);*/
  }
  .edit-box {
    width: 55;
    height: 55;
    position: absolute;
    top: 0;
    left: 0;
    border-radius: 55;
    justify-content: center;
    align-items: center;
    background-color: #aaa;
    opacity: 0;
    /*transform: scale(0.5);*/
  }
  /*.shadow {
    width: 750;
    height: 3000;
    position: absolute;
    top: -1000;
    left: -350;
    background-color: #000;
  }*/
</style>

<script>
  var getCategoryCN = require('../lib/getCategoryCN.js');
  var animation = require('@weex-module/animation');
  module.exports = {
    data: function() {
      return {
        detail: {},
        index: 0,
        optionsShow: false
      }
    },
    methods: {
      deleteItem: function() {
        console.log('delete')
        this.$dispatch('deleteItem', {index: this.index});
      },
      editItem: function() {
        console.log('edit')
        this.$dispatch('editItem-index', {index: this.index});
      },
      openOptions: function() {
        // this.zIndex = 2;
        var self = this;
        var deleteElem = this.$el('delete');
        var editElem = this.$el('edit');
        this.optionsShow = true;
        animation.transition(deleteElem, {
          styles: {
            opacity: 1,
            transform: 'translate(-300, 0)'
          },
          duration: 200,
          timingFunction: 'linear',
        }, function() {
          // console.log(deleteElem.style, self.$el('shadow'))
        });
        animation.transition(editElem, {
          styles: {
            opacity: 1,
            transform: 'translate(300, 0)'
          },
          duration: 200,
          timingFunction: 'linear',
        }, function() {
          // console.log('animation finished')
        })
      },
      closeOptions: function() {
        // this.zIndex = -5;
        var deleteElem = this.$el('delete');
        var editElem = this.$el('edit');
        this.optionsShow = false;
        animation.transition(deleteElem, {
          styles: {
            opacity: 0,
            transform: 'translate(0, 0)'
          },
          duration: 200,
          timingFunction: 'linear',
        }, function() {
          // console.log(deleteElem.style)
        });
        animation.transition(editElem, {
          styles: {
            opacity: 0,
            transform: 'translate(0, 0)'
          },
          duration: 200,
          timingFunction: 'linear',
        }, function() {

        });
      }
    },
    computed: {
      category: function() {
        return getCategoryCN(this.detail.category);
      },
      position: function() {
        return this.detail.income ? 'left' : 'right';
      },
      color: function() {
        return this.detail.income? 'green' : 'red';
      },
      amount: function() {
        return this.detail.amount.toFixed(2);
      }
    }
  }
</script>
